{"ast":null,"code":"var _jsxFileName = \"/Users/anshulkc/Downloads/quicken-project/quicken-blank-canvas/src/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button } from '@mui/material';\nimport { Ocr } from './Ocr.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FileUpload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [showOcr, setShowOcr] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('avatar', file);\n    try {\n      const response = await fetch('http://localhost:3000/api/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      console.log('Success: ', data);\n    } catch (error) {\n      console.log('did not work: ', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleSubmit();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => {\n          setFile(e.target.files[0]);\n          setShowOcr(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"outlined\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), showOcr && /*#__PURE__*/_jsxDEV(Ocr, {\n      file: file,\n      loadFile: e.target.files[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(FileUpload, \"d4xpUsEruTHfR6O0FhFM7DOD83U=\");\n_c = FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","Button","Ocr","FileUpload","file","setFile","showOcr","setShowOcr","handleSubmit","e","preventDefault","formData","FormData","append","response","fetch","method","body","data","json","console","log","error","target","files"],"sources":["/Users/anshulkc/Downloads/quicken-project/quicken-blank-canvas/src/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {Button} from '@mui/material'\nimport { Ocr } from './Ocr.js'\n\n\n\nexport function FileUpload() {\n    const [file, setFile] = useState(null);\n    const [showOcr, setShowOcr] = useState(false);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('avatar', file);\n\n        try {\n            const response = await fetch('http://localhost:3000/api/upload', {\n                method: 'POST',\n                body: formData\n            });\n            const data = await response.json();\n            console.log('Success: ', data);\n        }  catch (error) {\n            console.log('did not work: ', error);\n        }\n\n    };\n    \n    return (\n        <div>\n        <form onSubmit={(e) => {\n            e.preventDefault();\n            handleSubmit();\n        }}>\n            <input \n                type=\"file\" \n                onChange={(e) => {\n                    setFile(e.target.files[0]);\n                    setShowOcr(true);\n                }} \n            />\n            <Button type=\"submit\" variant=\"outlined\">Upload</Button>\n        </form>\n        {showOcr && <Ocr file={file} loadFile={e.target.files[0]} />}\n        </div>\n    );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,MAAM,QAAO,eAAe;AACpC,SAASC,GAAG,QAAQ,UAAU;AAAA;AAI9B,OAAO,SAASC,UAAU,GAAG;EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMQ,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAET,IAAI,CAAC;IAE/B,IAAI;MACA,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACV,CAAC,CAAC;MACF,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;MAClCC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,IAAI,CAAC;IAClC,CAAC,CAAE,OAAOI,KAAK,EAAE;MACbF,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,KAAK,CAAC;IACxC;EAEJ,CAAC;EAED,oBACI;IAAA,wBACA;MAAM,QAAQ,EAAGb,CAAC,IAAK;QACnBA,CAAC,CAACC,cAAc,EAAE;QAClBF,YAAY,EAAE;MAClB,CAAE;MAAA,wBACE;QACI,IAAI,EAAC,MAAM;QACX,QAAQ,EAAGC,CAAC,IAAK;UACbJ,OAAO,CAACI,CAAC,CAACc,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;UAC1BjB,UAAU,CAAC,IAAI,CAAC;QACpB;MAAE;QAAA;QAAA;QAAA;MAAA,QACJ,eACF,QAAC,MAAM;QAAC,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAC,UAAU;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACrD,EACND,OAAO,iBAAI,QAAC,GAAG;MAAC,IAAI,EAAEF,IAAK;MAAC,QAAQ,EAAEK,CAAC,CAACc,MAAM,CAACC,KAAK,CAAC,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACtD;AAEd;AAAC,GAxCerB,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
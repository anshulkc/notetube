{"ast":null,"code":"var _jsxFileName = \"/Users/anshulkc/Downloads/quicken-project/quicken-blank-canvas/src/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button } from '@mui/material';\nimport { server } from '@server';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FileUpload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('avatar', file);\n    try {\n      const response = await fetch('http://localhost:3000/api/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      console.log('Success: ', data);\n    } catch (error) {\n      console.log('did not work: ', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(FileUpload, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","Button","server","FileUpload","file","setFile","handleSubmit","e","preventDefault","formData","FormData","append","response","fetch","method","body","data","json","console","log","error","target","files"],"sources":["/Users/anshulkc/Downloads/quicken-project/quicken-blank-canvas/src/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {Button} from '@mui/material'\nimport {server} from '@server'\n\n\n\nexport function FileUpload() {\n    const [file, setFile] = useState(null);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('avatar', file);\n\n        try {\n            const response = await fetch('http://localhost:3000/api/upload', {\n                method: 'POST',\n                body: formData\n            });\n            const data = await response.json();\n            console.log('Success: ', data);\n        }  catch (error) {\n            console.log('did not work: ', error);\n        }\n\n    };\n    \n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"file\" \n                onChange={(e) => setFile(e.target.files[0])} \n            />\n            <button type=\"submit\">Upload</button>\n        </form>\n    );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,MAAM,QAAO,eAAe;AACpC,SAAQC,MAAM,QAAO,SAAS;AAAA;AAI9B,OAAO,SAASC,UAAU,GAAG;EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMM,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEP,IAAI,CAAC;IAE/B,IAAI;MACA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACV,CAAC,CAAC;MACF,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;MAClCC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,IAAI,CAAC;IAClC,CAAC,CAAE,OAAOI,KAAK,EAAE;MACbF,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,KAAK,CAAC;IACxC;EAEJ,CAAC;EAED,oBACI;IAAM,QAAQ,EAAEd,YAAa;IAAA,wBACzB;MACI,IAAI,EAAC,MAAM;MACX,QAAQ,EAAGC,CAAC,IAAKF,OAAO,CAACE,CAAC,CAACc,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAC9C,eACF;MAAQ,IAAI,EAAC,QAAQ;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAClC;AAEf;AAAC,GA9BenB,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}